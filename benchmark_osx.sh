#!/bin/bash
sbt -batch -java-home /Library/Java/JavaVirtualMachines/graalvm-ee-java17/Contents/Home -Dmacro.settings=print-codecs clean 'jsoniter-scala-benchmarkJVM/jmh:run -jvmArgsAppend "-Dgraal.UseBranchesWithin32ByteBoundary=true" -p size=128 -prof gc -rf json -rff graalvm-ee-java17.json .*' 2>&1 | tee graalvm-ee-java17.txt
sbt -batch -java-home /Library/Java/JavaVirtualMachines/graalvm-ee-java11/Contents/Home -Dmacro.settings=print-codecs clean 'jsoniter-scala-benchmarkJVM/jmh:run -jvmArgsAppend "-Dgraal.UseBranchesWithin32ByteBoundary=true" -p size=128 -prof gc -rf json -rff graalvm-ee-java11.json .*' 2>&1 | tee graalvm-ee-java11.txt
sbt -batch -java-home /Library/Java/JavaVirtualMachines/graalvm-ee-java8/Contents/Home -Dmacro.settings=print-codecs clean 'jsoniter-scala-benchmarkJVM/jmh:run -jvmArgsAppend "-Dgraal.UseBranchesWithin32ByteBoundary=true" -p size=128 -prof gc -rf json -rff graalvm-ee-java8.json .*' 2>&1 | tee graalvm-ee-java8.txt
sbt -batch -java-home /Library/Java/JavaVirtualMachines/graalvm-ce-java17/Contents/Home -Dmacro.settings=print-codecs clean 'jsoniter-scala-benchmarkJVM/jmh:run -jvmArgsAppend "-Dgraal.UseBranchesWithin32ByteBoundary=true" -p size=128 -prof gc -rf json -rff graalvm-ce-java17.json .*' 2>&1 | tee graalvm-ce-java17.txt
sbt -batch -java-home /Library/Java/JavaVirtualMachines/graalvm-ce-java11/Contents/Home -Dmacro.settings=print-codecs clean 'jsoniter-scala-benchmarkJVM/jmh:run -jvmArgsAppend "-Dgraal.UseBranchesWithin32ByteBoundary=true" -p size=128 -prof gc -rf json -rff graalvm-ce-java11.json .*' 2>&1 | tee graalvm-ce-java11.txt
sbt -batch -java-home /Library/Java/JavaVirtualMachines/zulu-17/Contents/Home -Dmacro.settings=print-codecs clean 'jsoniter-scala-benchmarkJVM/jmh:run -p size=128 -prof gc -rf json -rff zulu-17.json .*' 2>&1 | tee zulu-17.txt
sbt -batch -java-home /Library/Java/JavaVirtualMachines/zulu-11/Contents/Home -Dmacro.settings=print-codecs clean 'jsoniter-scala-benchmarkJVM/jmh:run -p size=128 -prof gc -rf json -rff zulu-11.json .*' 2>&1 | tee zulu-11.txt
sbt -batch -java-home /Library/Java/JavaVirtualMachines/zulu-8/Contents/Home -Dmacro.settings=print-codecs clean 'jsoniter-scala-benchmarkJVM/jmh:run -p size=128 -prof gc -rf json -rff zulu-8.json .*' 2>&1 | tee zulu-8.txt
