[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 12, 2017 8:34:16 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:26:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-2L);
[info]                     _s = in.readString()
[info]                   }
[info]                   case -3621593128239734518L => {
[info]                     req0.&=(-3L);
[info]                     _bd = BigDecimal(in.readBigDecimal())
[info]                   }
[info]                   case 3145557872620432656L => _os = Option(in.readString())
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           if (x.s.ne(null))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               out.writeVal(x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.bd.ne(null))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bd");
[info]               out.writeRaw(x.bd.toString)
[info]             }
[info]           else
[info]             ();
[info]           if (x.os.ne(null).&&(x.os.isDefined))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:28:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case -2880316277851419472L => _bs = d0(in)
[info]                   case 6036675737602992569L => _mbs = d1(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           BitSet.empty
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           BitSet.empty
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.mutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           BitSet.empty
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           BitSet.empty
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: Codec[BitSets] = materialize[BitSets]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:31:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 7173115670136726671L => _l = d0(in)
[info]                   case 8782703599529504340L => _s = d1(in)
[info]                   case -8160163252060190562L => _ls = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[String]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(in.readString())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           List.empty[String]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           Set.empty[Int]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Set.empty[Int]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[scala.collection.immutable.Set[Int]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           List.empty[scala.collection.immutable.Set[Int]]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:33:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in)
[info]                   case -1832287182589162500L => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[String, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[Long, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:36:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in)
[info]                   case -1832287182589162500L => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[String, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           OpenHashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           OpenHashMap.empty[Long, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsInt(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:38:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in)
[info]                   case -1832287182589162500L => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           IntMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           IntMap.empty[Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           LongMap.empty[Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[scala.collection.immutable.LongMap[Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           LongMap.empty[scala.collection.immutable.LongMap[Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:40:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "dbl", "f");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 127L;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 3085628732346524253L => {
[info]                     req0.&=(-2L);
[info]                     _b = in.readInt().toByte
[info]                   }
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-3L);
[info]                     _s = in.readInt().toShort
[info]                   }
[info]                   case -874823976827361790L => {
[info]                     req0.&=(-5L);
[info]                     _i = in.readInt()
[info]                   }
[info]                   case 7173115670136726671L => {
[info]                     req0.&=(-9L);
[info]                     _l = in.readLong()
[info]                   }
[info]                   case 1948447510327205053L => {
[info]                     req0.&=(-17L);
[info]                     _bl = in.readBoolean()
[info]                   }
[info]                   case 4052889318286228612L => {
[info]                     req0.&=(-33L);
[info]                     _dbl = in.readDouble()
[info]                   }
[info]                   case -8922763623791618166L => {
[info]                     req0.&=(-65L);
[info]                     _f = in.readFloat()
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 25 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 42 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 0.00% complete, ETA 00:06:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1135766.481 ops/s
[info] # Warmup Iteration   2: 1518719.534 ops/s
[info] # Warmup Iteration   3: 1225655.109 ops/s
[info] # Warmup Iteration   4: 1228811.822 ops/s
[info] # Warmup Iteration   5: 1418303.703 ops/s
[info] Iteration   1: 1785600.388 ops/s
[info]                  ·gc.alloc.rate:               1271.103 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      873.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 770.075 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 1769481.482 ops/s
[info]                  ·gc.alloc.rate:               1259.661 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1750.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1556.545 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 1762696.519 ops/s
[info]                  ·gc.alloc.rate:                   1254.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          876.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     782.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1761406.744 ops/s
[info]                  ·gc.alloc.rate:               1253.900 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1754.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1567.226 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 1750314.172 ops/s
[info]                  ·gc.alloc.rate:               1246.061 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      878.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 789.192 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1765899.861 ±(99.9%) 49995.462 ops/s [Average]
[info]   (min, avg, max) = (1750314.172, 1765899.861, 1785600.388), stdev = 12983.663
[info]   CI (99.9%): [1715904.399, 1815895.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1257.117 ±(99.9%) 35.489 MB/sec [Average]
[info]   (min, avg, max) = (1246.061, 1257.117, 1271.103), stdev = 9.216
[info]   CI (99.9%): [1221.628, 1292.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1226.778 ±(99.9%) 1848.416 MB/sec [Average]
[info]   (min, avg, max) = (873.968, 1226.778, 1754.593), stdev = 480.028
[info]   CI (99.9%): [≈ 0, 3075.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1093.098 ±(99.9%) 1648.130 B/op [Average]
[info]   (min, avg, max) = (770.075, 1093.098, 1567.226), stdev = 428.014
[info]   CI (99.9%): [≈ 0, 2741.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.074), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 5.200, 8.000), stdev = 3.564
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 2.63% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5635935.480 ops/s
[info] # Warmup Iteration   2: 5514787.665 ops/s
[info] # Warmup Iteration   3: 4530726.586 ops/s
[info] # Warmup Iteration   4: 4307806.547 ops/s
[info] # Warmup Iteration   5: 5681618.327 ops/s
[info] Iteration   1: 6390796.890 ops/s
[info]                  ·gc.alloc.rate:               1104.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 201.622 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 6344120.816 ops/s
[info]                  ·gc.alloc.rate:                   1096.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1523.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     377.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 6395196.655 ops/s
[info]                  ·gc.alloc.rate:               1105.729 MB/sec
[info]                  ·gc.alloc.rate.norm:          272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 174.267 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 6281409.580 ops/s
[info]                  ·gc.alloc.rate:                   1086.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     330.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6217908.064 ops/s
[info]                  ·gc.alloc.rate:               1075.005 MB/sec
[info]                  ·gc.alloc.rate.norm:          272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1198.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 303.175 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   6325886.401 ±(99.9%) 291908.816 ops/s [Average]
[info]   (min, avg, max) = (6217908.064, 6325886.401, 6395196.655), stdev = 75807.793
[info]   CI (99.9%): [6033977.585, 6617795.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   1093.697 ±(99.9%) 50.531 MB/sec [Average]
[info]   (min, avg, max) = (1075.005, 1093.697, 1105.729), stdev = 13.123
[info]   CI (99.9%): [1043.165, 1144.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (272.000, 272.000, 272.000), stdev = 0.001
[info]   CI (99.9%): [272.000, 272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1113.574 ±(99.9%) 1317.536 MB/sec [Average]
[info]   (min, avg, max) = (708.426, 1113.574, 1523.739), stdev = 342.160
[info]   CI (99.9%): [≈ 0, 2431.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   277.430 ±(99.9%) 333.065 B/op [Average]
[info]   (min, avg, max) = (174.267, 277.430, 377.861), stdev = 86.496
[info]   CI (99.9%): [≈ 0, 610.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.243 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.146), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.037), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 7.000), stdev = 2.490
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 5.26% complete, ETA 00:09:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 200352.677 ops/s
[info] # Warmup Iteration   2: 341602.508 ops/s
[info] # Warmup Iteration   3: 345897.826 ops/s
[info] # Warmup Iteration   4: 344389.404 ops/s
[info] # Warmup Iteration   5: 360765.660 ops/s
[info] Iteration   1: 361652.226 ops/s
[info]                  ·gc.alloc.rate:                   956.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          819.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3562.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 356997.977 ops/s
[info]                  ·gc.alloc.rate:               943.953 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3439.061 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 358758.170 ops/s
[info]                  ·gc.alloc.rate:               948.629 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3259.941 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 357048.829 ops/s
[info]                  ·gc.alloc.rate:                   944.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1383.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6095.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 358258.475 ops/s
[info]                  ·gc.alloc.rate:               947.285 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2825.502 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   358543.135 ±(99.9%) 7309.680 ops/s [Average]
[info]   (min, avg, max) = (356997.977, 358543.135, 361652.226), stdev = 1898.301
[info]   CI (99.9%): [351233.456, 365852.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   948.055 ±(99.9%) 19.363 MB/sec [Average]
[info]   (min, avg, max) = (943.953, 948.055, 956.293), stdev = 5.029
[info]   CI (99.9%): [928.692, 967.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   873.923 ±(99.9%) 1125.254 MB/sec [Average]
[info]   (min, avg, max) = (643.403, 873.923, 1383.463), stdev = 292.225
[info]   CI (99.9%): [≈ 0, 1999.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   3836.630 ±(99.9%) 4980.673 B/op [Average]
[info]   (min, avg, max) = (2825.502, 3836.630, 6095.877), stdev = 1293.465
[info]   CI (99.9%): [≈ 0, 8817.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.146 ±(99.9%) 0.811 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.146, 0.459), stdev = 0.211
[info]   CI (99.9%): [≈ 0, 0.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 9.000), stdev = 3.271
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 7.89% complete, ETA 00:09:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5608880.626 ops/s
[info] # Warmup Iteration   2: 5015522.573 ops/s
[info] # Warmup Iteration   3: 5378504.712 ops/s
[info] # Warmup Iteration   4: 5361663.449 ops/s
[info] # Warmup Iteration   5: 5416417.356 ops/s
[info] Iteration   1: 5249298.982 ops/s
[info]                  ·gc.alloc.rate:                   560.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          859.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     257.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 5353642.194 ops/s
[info]                  ·gc.alloc.rate:      571.688 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 5351942.083 ops/s
[info]                  ·gc.alloc.rate:               571.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      860.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 252.811 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 5278007.403 ops/s
[info]                  ·gc.alloc.rate:                   563.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          818.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     244.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 5356260.083 ops/s
[info]                  ·gc.alloc.rate:               571.952 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 229.216 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   5317830.149 ±(99.9%) 194499.055 ops/s [Average]
[info]   (min, avg, max) = (5249298.982, 5317830.149, 5356260.083), stdev = 50510.787
[info]   CI (99.9%): [5123331.094, 5512329.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   567.852 ±(99.9%) 20.794 MB/sec [Average]
[info]   (min, avg, max) = (560.530, 567.852, 571.952), stdev = 5.400
[info]   CI (99.9%): [547.057, 588.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   663.871 ±(99.9%) 1434.709 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 663.871, 860.012), stdev = 372.589
[info]   CI (99.9%): [≈ 0, 2098.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   196.783 ±(99.9%) 425.640 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 196.783, 257.754), stdev = 110.537
[info]   CI (99.9%): [≈ 0, 622.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.012), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 4.200, 16.000), stdev = 6.648
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 10.53% complete, ETA 00:09:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2930469.619 ops/s
[info] # Warmup Iteration   2: 2971857.374 ops/s
[info] # Warmup Iteration   3: 2278730.178 ops/s
[info] # Warmup Iteration   4: 2356393.403 ops/s
[info] # Warmup Iteration   5: 3130221.390 ops/s
[info] Iteration   1: 3419305.928 ops/s
[info]                  ·gc.alloc.rate:                   1617.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     748.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 3378205.699 ops/s
[info]                  ·gc.alloc.rate:                   1597.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2163.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1007.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3378823.375 ops/s
[info]                  ·gc.alloc.rate:                   1597.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1278.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     595.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3396154.973 ops/s
[info]                  ·gc.alloc.rate:                   1606.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1702.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     788.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3366194.992 ops/s
[info]                  ·gc.alloc.rate:                   1591.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1477.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     690.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3387736.993 ±(99.9%) 79425.447 ops/s [Average]
[info]   (min, avg, max) = (3366194.992, 3387736.993, 3419305.928), stdev = 20626.536
[info]   CI (99.9%): [3308311.546, 3467162.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1602.115 ±(99.9%) 37.498 MB/sec [Average]
[info]   (min, avg, max) = (1591.922, 1602.115, 1617.000), stdev = 9.738
[info]   CI (99.9%): [1564.617, 1639.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1650.024 ±(99.9%) 1270.407 MB/sec [Average]
[info]   (min, avg, max) = (1278.245, 1650.024, 2163.949), stdev = 329.921
[info]   CI (99.9%): [379.617, 2920.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   766.219 ±(99.9%) 590.702 B/op [Average]
[info]   (min, avg, max) = (595.159, 766.219, 1007.735), stdev = 153.403
[info]   CI (99.9%): [175.517, 1356.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.023, 0.038), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.600, 11.000), stdev = 4.336
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 13.16% complete, ETA 00:08:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127123.648 ops/s
[info] # Warmup Iteration   2: 208932.285 ops/s
[info] # Warmup Iteration   3: 219802.946 ops/s
[info] # Warmup Iteration   4: 218625.719 ops/s
[info] # Warmup Iteration   5: 222558.711 ops/s
[info] Iteration   1: 222743.292 ops/s
[info]                  ·gc.alloc.rate:                   1232.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1523.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10762.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 222857.797 ops/s
[info]                  ·gc.alloc.rate:                   1234.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1379.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9726.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 223014.549 ops/s
[info]                  ·gc.alloc.rate:                   1233.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8866.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 223361.686 ops/s
[info]                  ·gc.alloc.rate:                   1235.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1142.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8047.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.440 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 224255.989 ops/s
[info]                  ·gc.alloc.rate:                   1240.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1039.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7293.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay":
[info]   223246.663 ±(99.9%) 2350.506 ops/s [Average]
[info]   (min, avg, max) = (222743.292, 223246.663, 224255.989), stdev = 610.419
[info]   CI (99.9%): [220896.156, 225597.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1235.451 ±(99.9%) 12.272 MB/sec [Average]
[info]   (min, avg, max) = (1232.317, 1235.451, 1240.687), stdev = 3.187
[info]   CI (99.9%): [1223.179, 1247.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8704.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8704.002, 8704.002, 8704.002), stdev = 0.001
[info]   CI (99.9%): [8704.002, 8704.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1268.482 ±(99.9%) 735.394 MB/sec [Average]
[info]   (min, avg, max) = (1039.589, 1268.482, 1523.723), stdev = 190.979
[info]   CI (99.9%): [533.088, 2003.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8939.161 ±(99.9%) 5255.948 B/op [Average]
[info]   (min, avg, max) = (7293.206, 8939.161, 10762.241), stdev = 1364.953
[info]   CI (99.9%): [3683.213, 14195.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.323 ±(99.9%) 0.472 B/op [Average]
[info]   (min, avg, max) = (0.146, 0.323, 0.440), stdev = 0.123
[info]   CI (99.9%): [≈ 0, 0.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 10.000), stdev = 3.114
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 15.79% complete, ETA 00:08:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 270460.358 ops/s
[info] # Warmup Iteration   2: 489480.470 ops/s
[info] # Warmup Iteration   3: 510675.574 ops/s
[info] # Warmup Iteration   4: 507602.431 ops/s
[info] # Warmup Iteration   5: 511361.288 ops/s
[info] Iteration   1: 509092.857 ops/s
[info]                  ·gc.alloc.rate:                   517.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          723.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2234.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 515889.873 ops/s
[info]                  ·gc.alloc.rate:               524.669 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      392.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1196.981 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 503355.428 ops/s
[info]                  ·gc.alloc.rate:               511.913 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      437.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1367.362 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 513474.460 ops/s
[info]                  ·gc.alloc.rate:                   522.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          437.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1340.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 513950.635 ops/s
[info]                  ·gc.alloc.rate:               522.686 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      472.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1447.374 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   511152.650 ±(99.9%) 19320.511 ops/s [Average]
[info]   (min, avg, max) = (503355.428, 511152.650, 515889.873), stdev = 5017.475
[info]   CI (99.9%): [491832.140, 530473.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   519.847 ±(99.9%) 19.651 MB/sec [Average]
[info]   (min, avg, max) = (511.913, 519.847, 524.669), stdev = 5.103
[info]   CI (99.9%): [500.196, 539.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   492.677 ±(99.9%) 507.940 MB/sec [Average]
[info]   (min, avg, max) = (392.512, 492.677, 723.073), stdev = 131.910
[info]   CI (99.9%): [≈ 0, 1000.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1517.326 ±(99.9%) 1582.490 B/op [Average]
[info]   (min, avg, max) = (1196.981, 1517.326, 2234.466), stdev = 410.968
[info]   CI (99.9%): [≈ 0, 3099.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.270 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.129), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 13.000), stdev = 5.167
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 18.42% complete, ETA 00:08:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2813021.271 ops/s
[info] # Warmup Iteration   2: 2757726.123 ops/s
[info] # Warmup Iteration   3: 2129334.396 ops/s
[info] # Warmup Iteration   4: 2181768.488 ops/s
[info] # Warmup Iteration   5: 2162373.069 ops/s
[info] Iteration   1: 3030361.691 ops/s
[info]                  ·gc.alloc.rate:               755.045 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      859.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 446.478 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 3101703.784 ops/s
[info]                  ·gc.alloc.rate:               772.835 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 415.423 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 3113684.680 ops/s
[info]                  ·gc.alloc.rate:                   775.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          780.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     394.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3103272.621 ops/s
[info]                  ·gc.alloc.rate:               773.215 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 376.866 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3099166.629 ops/s
[info]                  ·gc.alloc.rate:               772.189 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 359.614 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   3089637.881 ±(99.9%) 129358.203 ops/s [Average]
[info]   (min, avg, max) = (3030361.691, 3089637.881, 3113684.680), stdev = 33593.915
[info]   CI (99.9%): [2960279.678, 3218996.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   769.821 ±(99.9%) 32.247 MB/sec [Average]
[info]   (min, avg, max) = (755.045, 769.821, 775.819), stdev = 8.374
[info]   CI (99.9%): [737.574, 802.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   782.222 ±(99.9%) 230.746 MB/sec [Average]
[info]   (min, avg, max) = (708.393, 782.222, 859.977), stdev = 59.924
[info]   CI (99.9%): [551.476, 1012.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   398.536 ±(99.9%) 130.384 B/op [Average]
[info]   (min, avg, max) = (359.614, 398.536, 446.478), stdev = 33.860
[info]   CI (99.9%): [268.151, 528.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.032), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 21.05% complete, ETA 00:08:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43279.386 ops/s
[info] # Warmup Iteration   2: 137198.169 ops/s
[info] # Warmup Iteration   3: 141536.874 ops/s
[info] # Warmup Iteration   4: 142463.537 ops/s
[info] # Warmup Iteration   5: 146830.321 ops/s
[info] Iteration   1: 147496.835 ops/s
[info]                  ·gc.alloc.rate:               1014.052 MB/sec
[info]                  ·gc.alloc.rate.norm:          10816.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8736.001 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 147960.552 ops/s
[info]                  ·gc.alloc.rate:               1017.172 MB/sec
[info]                  ·gc.alloc.rate.norm:          10816.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8297.344 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 148701.214 ops/s
[info]                  ·gc.alloc.rate:                   1022.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              10816.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1451.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15359.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.881 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 147295.022 ops/s
[info]                  ·gc.alloc.rate:               1012.641 MB/sec
[info]                  ·gc.alloc.rate.norm:          10816.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7210.303 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 146486.204 ops/s
[info]                  ·gc.alloc.rate:                   1007.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              10816.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13498.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.447 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   147587.965 ±(99.9%) 3155.498 ops/s [Average]
[info]   (min, avg, max) = (146486.204, 147587.965, 148701.214), stdev = 819.473
[info]   CI (99.9%): [144432.467, 150743.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1014.659 ±(99.9%) 21.625 MB/sec [Average]
[info]   (min, avg, max) = (1007.119, 1014.659, 1022.311), stdev = 5.616
[info]   CI (99.9%): [993.034, 1036.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10816.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10816.003, 10816.003, 10816.003), stdev = 0.001
[info]   CI (99.9%): [10816.003, 10816.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   996.606 ±(99.9%) 1300.984 MB/sec [Average]
[info]   (min, avg, max) = (675.060, 996.606, 1451.762), stdev = 337.862
[info]   CI (99.9%): [≈ 0, 2297.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10620.258 ±(99.9%) 13792.223 B/op [Average]
[info]   (min, avg, max) = (7210.303, 10620.258, 15359.580), stdev = 3581.796
[info]   CI (99.9%): [≈ 0, 24412.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.266 ±(99.9%) 1.521 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.266, 0.881), stdev = 0.395
[info]   CI (99.9%): [≈ 0, 1.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 9.000), stdev = 2.739
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 23.68% complete, ETA 00:07:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 260638.823 ops/s
[info] # Warmup Iteration   2: 852971.597 ops/s
[info] # Warmup Iteration   3: 877099.711 ops/s
[info] # Warmup Iteration   4: 871792.101 ops/s
[info] # Warmup Iteration   5: 880151.786 ops/s
[info] Iteration   1: 885757.047 ops/s
[info]                  ·gc.alloc.rate:                   1044.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          865.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1537.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 878144.908 ops/s
[info]                  ·gc.alloc.rate:                   1035.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          938.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1681.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 870821.553 ops/s
[info]                  ·gc.alloc.rate:               1027.324 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1802.281 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 870518.690 ops/s
[info]                  ·gc.alloc.rate:                   1026.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1054.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1906.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 873563.769 ops/s
[info]                  ·gc.alloc.rate:                   1030.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1117.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2012.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   875761.194 ±(99.9%) 24528.916 ops/s [Average]
[info]   (min, avg, max) = (870518.690, 875761.194, 885757.047), stdev = 6370.082
[info]   CI (99.9%): [851232.278, 900290.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1033.142 ±(99.9%) 28.932 MB/sec [Average]
[info]   (min, avg, max) = (1026.946, 1033.142, 1044.933), stdev = 7.514
[info]   CI (99.9%): [1004.210, 1062.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   994.798 ±(99.9%) 378.061 MB/sec [Average]
[info]   (min, avg, max) = (865.657, 994.798, 1117.570), stdev = 98.181
[info]   CI (99.9%): [616.737, 1372.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1788.018 ±(99.9%) 717.505 B/op [Average]
[info]   (min, avg, max) = (1537.573, 1788.018, 2012.705), stdev = 186.334
[info]   CI (99.9%): [1070.513, 2505.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.119 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.045, 0.075), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 7.000), stdev = 2.280
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 26.32% complete, ETA 00:07:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3171921.111 ops/s
[info] # Warmup Iteration   2: 3117711.909 ops/s
[info] # Warmup Iteration   3: 3247593.586 ops/s
[info] # Warmup Iteration   4: 3251050.571 ops/s
[info] # Warmup Iteration   5: 3299466.430 ops/s
[info] Iteration   1: 3302469.103 ops/s
[info]                  ·gc.alloc.rate:               822.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      860.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 409.702 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 3312734.157 ops/s
[info]                  ·gc.alloc.rate:               825.386 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 388.969 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 3218170.393 ops/s
[info]                  ·gc.alloc.rate:                   801.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1523.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     744.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3278978.976 ops/s
[info]                  ·gc.alloc.rate:               817.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 339.886 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 3293630.204 ops/s
[info]                  ·gc.alloc.rate:                   820.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     322.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   3281196.567 ±(99.9%) 143806.885 ops/s [Average]
[info]   (min, avg, max) = (3218170.393, 3281196.567, 3312734.157), stdev = 37346.191
[info]   CI (99.9%): [3137389.681, 3425003.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   817.551 ±(99.9%) 35.751 MB/sec [Average]
[info]   (min, avg, max) = (801.879, 817.551, 825.386), stdev = 9.284
[info]   CI (99.9%): [781.800, 853.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   917.257 ±(99.9%) 1338.230 MB/sec [Average]
[info]   (min, avg, max) = (675.070, 917.257, 1523.814), stdev = 347.534
[info]   CI (99.9%): [≈ 0, 2255.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   441.189 ±(99.9%) 667.860 B/op [Average]
[info]   (min, avg, max) = (322.468, 441.189, 744.919), stdev = 173.441
[info]   CI (99.9%): [≈ 0, 1109.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.030), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 9.000), stdev = 2.793
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay
[info] # Run progress: 28.95% complete, ETA 00:07:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133877.178 ops/s
[info] # Warmup Iteration   2: 224182.800 ops/s
[info] # Warmup Iteration   3: 235060.137 ops/s
[info] # Warmup Iteration   4: 240324.519 ops/s
[info] # Warmup Iteration   5: 242752.847 ops/s
[info] Iteration   1: 239533.213 ops/s
[info]                  ·gc.alloc.rate:               1283.778 MB/sec
[info]                  ·gc.alloc.rate.norm:          8432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1627.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10686.624 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 239478.919 ops/s
[info]                  ·gc.alloc.rate:                   1283.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              8432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1476.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9699.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 240276.121 ops/s
[info]                  ·gc.alloc.rate:                   1287.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              8432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8776.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 238137.106 ops/s
[info]                  ·gc.alloc.rate:               1276.327 MB/sec
[info]                  ·gc.alloc.rate.norm:          8432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1217.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8045.751 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 240330.989 ops/s
[info]                  ·gc.alloc.rate:                   1288.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              8432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1107.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7248.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay":
[info]   239551.270 ±(99.9%) 3411.023 ops/s [Average]
[info]   (min, avg, max) = (238137.106, 239551.270, 240330.989), stdev = 885.832
[info]   CI (99.9%): [236140.247, 242962.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1283.894 ±(99.9%) 18.260 MB/sec [Average]
[info]   (min, avg, max) = (1276.327, 1283.894, 1288.055), stdev = 4.742
[info]   CI (99.9%): [1265.634, 1302.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8432.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8432.002, 8432.002, 8432.002), stdev = 0.001
[info]   CI (99.9%): [8432.002, 8432.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1353.808 ±(99.9%) 791.851 MB/sec [Average]
[info]   (min, avg, max) = (1107.230, 1353.808, 1627.046), stdev = 205.641
[info]   CI (99.9%): [561.957, 2145.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8891.384 ±(99.9%) 5203.228 B/op [Average]
[info]   (min, avg, max) = (7248.271, 8891.384, 10686.624), stdev = 1351.262
[info]   CI (99.9%): [3688.157, 14094.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.082 ±(99.9%) 0.288 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.082, 0.137), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 9.000), stdev = 2.915
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 31.58% complete, ETA 00:06:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109662.278 ops/s
[info] # Warmup Iteration   2: 709892.116 ops/s
[info] # Warmup Iteration   3: 805496.828 ops/s
[info] # Warmup Iteration   4: 817464.581 ops/s
[info] # Warmup Iteration   5: 805786.791 ops/s
[info] Iteration   1: 782502.930 ops/s
[info]                  ·gc.alloc.rate:                   1014.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1443.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2902.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 818410.614 ops/s
[info]                  ·gc.alloc.rate:               1061.262 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      518.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 997.182 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 825251.650 ops/s
[info]                  ·gc.alloc.rate:                   1070.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1165.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2222.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 819120.162 ops/s
[info]                  ·gc.alloc.rate:                   1062.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1245.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2392.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 818677.124 ops/s
[info]                  ·gc.alloc.rate:               1061.528 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1324.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2545.970 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   812792.496 ±(99.9%) 66106.702 ops/s [Average]
[info]   (min, avg, max) = (782502.930, 812792.496, 825251.650), stdev = 17167.701
[info]   CI (99.9%): [746685.794, 878899.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   1053.927 ±(99.9%) 85.694 MB/sec [Average]
[info]   (min, avg, max) = (1014.660, 1053.927, 1070.067), stdev = 22.254
[info]   CI (99.9%): [968.233, 1139.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.000, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1139.688 ±(99.9%) 1393.676 MB/sec [Average]
[info]   (min, avg, max) = (518.761, 1139.688, 1443.454), stdev = 361.933
[info]   CI (99.9%): [≈ 0, 2533.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2212.039 ±(99.9%) 2787.506 B/op [Average]
[info]   (min, avg, max) = (997.182, 2212.039, 2902.100), stdev = 723.907
[info]   CI (99.9%): [≈ 0, 4999.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.080), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 12.000), stdev = 3.768
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 34.21% complete, ETA 00:06:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1731834.059 ops/s
[info] # Warmup Iteration   2: 2507628.519 ops/s
[info] # Warmup Iteration   3: 2534988.246 ops/s
[info] # Warmup Iteration   4: 2647328.677 ops/s
[info] # Warmup Iteration   5: 2161732.496 ops/s
[info] Iteration   1: 1836525.391 ops/s
[info]                  ·gc.alloc.rate:                   1148.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1550.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1328.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1881110.948 ops/s
[info]                  ·gc.alloc.rate:               1176.579 MB/sec
[info]                  ·gc.alloc.rate.norm:          984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      720.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 602.761 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1877241.080 ops/s
[info]                  ·gc.alloc.rate:                   1174.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1123.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2521356.483 ops/s
[info]                  ·gc.alloc.rate:                   1576.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1785.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1114.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2651808.622 ops/s
[info]                  ·gc.alloc.rate:                   1658.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1548.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     918.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2153608.505 ±(99.9%) 1533766.998 ops/s [Average]
[info]   (min, avg, max) = (1836525.391, 2153608.505, 2651808.622), stdev = 398314.419
[info]   CI (99.9%): [619841.506, 3687375.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1346.988 ±(99.9%) 959.246 MB/sec [Average]
[info]   (min, avg, max) = (1148.659, 1346.988, 1658.575), stdev = 249.113
[info]   CI (99.9%): [387.742, 2306.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   984.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (984.000, 984.000, 984.000), stdev = 0.001
[info]   CI (99.9%): [984.000, 984.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1389.303 ±(99.9%) 1561.403 MB/sec [Average]
[info]   (min, avg, max) = (720.728, 1389.303, 1785.588), stdev = 405.491
[info]   CI (99.9%): [≈ 0, 2950.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1017.560 ±(99.9%) 1052.583 B/op [Average]
[info]   (min, avg, max) = (602.761, 1017.560, 1328.084), stdev = 273.352
[info]   CI (99.9%): [≈ 0, 2070.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.042 ±(99.9%) 0.139 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.087), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 10.000), stdev = 3.362
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay
[info] # Run progress: 36.84% complete, ETA 00:06:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125649.617 ops/s
[info] # Warmup Iteration   2: 211013.563 ops/s
[info] # Warmup Iteration   3: 221796.647 ops/s
[info] # Warmup Iteration   4: 223261.334 ops/s
[info] # Warmup Iteration   5: 225483.789 ops/s
[info] Iteration   1: 224186.160 ops/s
[info]                  ·gc.alloc.rate:               1242.569 MB/sec
[info]                  ·gc.alloc.rate.norm:          8720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1627.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11417.898 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 226090.362 ops/s
[info]                  ·gc.alloc.rate:                   1253.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              8720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1476.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10273.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 227708.861 ops/s
[info]                  ·gc.alloc.rate:               1262.080 MB/sec
[info]                  ·gc.alloc.rate.norm:          8720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      686.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4742.354 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 224962.870 ops/s
[info]                  ·gc.alloc.rate:                   1246.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              8720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1277.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8934.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 226376.021 ops/s
[info]                  ·gc.alloc.rate:                   1254.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              8720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1701.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11826.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay":
[info]   225864.855 ±(99.9%) 5217.621 ops/s [Average]
[info]   (min, avg, max) = (224186.160, 225864.855, 227708.861), stdev = 1355.000
[info]   CI (99.9%): [220647.233, 231082.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1251.870 ±(99.9%) 28.899 MB/sec [Average]
[info]   (min, avg, max) = (1242.569, 1251.870, 1262.080), stdev = 7.505
[info]   CI (99.9%): [1222.971, 1280.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8720.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8720.002, 8720.002, 8720.002), stdev = 0.001
[info]   CI (99.9%): [8720.002, 8720.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1353.786 ±(99.9%) 1566.432 MB/sec [Average]
[info]   (min, avg, max) = (686.379, 1353.786, 1701.615), stdev = 406.797
[info]   CI (99.9%): [≈ 0, 2920.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9438.857 ±(99.9%) 10997.127 B/op [Average]
[info]   (min, avg, max) = (4742.354, 9438.857, 11826.219), stdev = 2855.919
[info]   CI (99.9%): [≈ 0, 20435.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.174 ±(99.9%) 0.612 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.174, 0.291), stdev = 0.159
[info]   CI (99.9%): [≈ 0, 0.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 8.000), stdev = 2.387
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 39.47% complete, ETA 00:06:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 630132.790 ops/s
[info] # Warmup Iteration   2: 1049469.219 ops/s
[info] # Warmup Iteration   3: 1052631.835 ops/s
[info] # Warmup Iteration   4: 1071037.124 ops/s
[info] # Warmup Iteration   5: 1088802.097 ops/s
[info] Iteration   1: 1058141.728 ops/s
[info]                  ·gc.alloc.rate:               774.805 MB/sec
[info]                  ·gc.alloc.rate.norm:          1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      797.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1185.013 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 1078437.705 ops/s
[info]                  ·gc.alloc.rate:               789.625 MB/sec
[info]                  ·gc.alloc.rate.norm:          1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      803.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1171.986 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1067750.126 ops/s
[info]                  ·gc.alloc.rate:                   781.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          875.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1289.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1089897.002 ops/s
[info]                  ·gc.alloc.rate:               798.066 MB/sec
[info]                  ·gc.alloc.rate.norm:          1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      875.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1263.510 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1089820.389 ops/s
[info]                  ·gc.alloc.rate:                   798.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          876.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1266.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   1076809.390 ±(99.9%) 53556.316 ops/s [Average]
[info]   (min, avg, max) = (1058141.728, 1076809.390, 1089897.002), stdev = 13908.405
[info]   CI (99.9%): [1023253.074, 1130365.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   788.467 ±(99.9%) 39.221 MB/sec [Average]
[info]   (min, avg, max) = (774.805, 788.467, 798.066), stdev = 10.186
[info]   CI (99.9%): [749.245, 827.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1152.000, 1152.000, 1152.000), stdev = 0.001
[info]   CI (99.9%): [1152.000, 1152.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   845.595 ±(99.9%) 159.941 MB/sec [Average]
[info]   (min, avg, max) = (797.008, 845.595, 876.988), stdev = 41.536
[info]   CI (99.9%): [685.654, 1005.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1235.261 ±(99.9%) 204.161 B/op [Average]
[info]   (min, avg, max) = (1171.986, 1235.261, 1289.770), stdev = 53.020
[info]   CI (99.9%): [1031.101, 1439.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.061), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 9.000), stdev = 3.782
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 42.11% complete, ETA 00:05:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5294284.095 ops/s
[info] # Warmup Iteration   2: 5491587.742 ops/s
[info] # Warmup Iteration   3: 5683955.658 ops/s
[info] # Warmup Iteration   4: 5827268.570 ops/s
[info] # Warmup Iteration   5: 5826348.294 ops/s
[info] Iteration   1: 5805958.784 ops/s
[info]                  ·gc.alloc.rate:                   147.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          159.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 5792470.384 ops/s
[info]                  ·gc.alloc.rate:                   147.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          148.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5792540.009 ops/s
[info]                  ·gc.alloc.rate:                   147.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          138.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5790476.558 ops/s
[info]                  ·gc.alloc.rate:                   147.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          171.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5679844.865 ops/s
[info]                  ·gc.alloc.rate:                   144.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          118.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   5772258.120 ±(99.9%) 200342.186 ops/s [Average]
[info]   (min, avg, max) = (5679844.865, 5772258.120, 5805958.784), stdev = 52028.230
[info]   CI (99.9%): [5571915.934, 5972600.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   146.763 ±(99.9%) 5.100 MB/sec [Average]
[info]   (min, avg, max) = (144.411, 146.763, 147.619), stdev = 1.324
[info]   CI (99.9%): [141.664, 151.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   40.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (40.000, 40.000, 40.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   147.484 ±(99.9%) 77.221 MB/sec [Average]
[info]   (min, avg, max) = (118.955, 147.484, 171.277), stdev = 20.054
[info]   CI (99.9%): [70.262, 224.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   40.167 ±(99.9%) 20.065 B/op [Average]
[info]   (min, avg, max) = (32.949, 40.167, 46.534), stdev = 5.211
[info]   CI (99.9%): [20.102, 60.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.020, 0.028), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 9.000), stdev = 2.191
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 44.74% complete, ETA 00:05:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44828.879 ops/s
[info] # Warmup Iteration   2: 149437.374 ops/s
[info] # Warmup Iteration   3: 153156.868 ops/s
[info] # Warmup Iteration   4: 156423.322 ops/s
[info] # Warmup Iteration   5: 155372.681 ops/s
[info] Iteration   1: 159659.674 ops/s
[info]                  ·gc.alloc.rate:               988.015 MB/sec
[info]                  ·gc.alloc.rate.norm:          9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7689.500 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 158396.168 ops/s
[info]                  ·gc.alloc.rate:               980.256 MB/sec
[info]                  ·gc.alloc.rate.norm:          9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7383.266 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 158681.776 ops/s
[info]                  ·gc.alloc.rate:                   982.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1383.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13716.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.619 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 158229.041 ops/s
[info]                  ·gc.alloc.rate:               979.226 MB/sec
[info]                  ·gc.alloc.rate.norm:          9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6397.433 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 157600.179 ops/s
[info]                  ·gc.alloc.rate:                   975.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11961.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   158513.368 ±(99.9%) 2901.345 ops/s [Average]
[info]   (min, avg, max) = (157600.179, 158513.368, 159659.674), stdev = 753.470
[info]   CI (99.9%): [155612.022, 161414.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   980.983 ±(99.9%) 17.816 MB/sec [Average]
[info]   (min, avg, max) = (975.375, 980.983, 988.015), stdev = 4.627
[info]   CI (99.9%): [963.167, 998.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   9736.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9736.003, 9736.003, 9736.003), stdev = 0.001
[info]   CI (99.9%): [9736.002, 9736.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   949.805 ±(99.9%) 1240.443 MB/sec [Average]
[info]   (min, avg, max) = (643.440, 949.805, 1383.558), stdev = 322.139
[info]   CI (99.9%): [≈ 0, 2190.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9429.642 ±(99.9%) 12357.810 B/op [Average]
[info]   (min, avg, max) = (6397.433, 9429.642, 13716.636), stdev = 3209.284
[info]   CI (99.9%): [≈ 0, 21787.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.165 ±(99.9%) 1.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.165, 0.619), stdev = 0.269
[info]   CI (99.9%): [≈ 0, 1.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 4.000, 8.000), stdev = 3.082
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 47.37% complete, ETA 00:05:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2463977.570 ops/s
[info] # Warmup Iteration   2: 3625833.546 ops/s
[info] # Warmup Iteration   3: 3609955.243 ops/s
[info] # Warmup Iteration   4: 3577369.413 ops/s
[info] # Warmup Iteration   5: 3692557.231 ops/s
[info] Iteration   1: 3607733.565 ops/s
[info]                  ·gc.alloc.rate:                   990.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1381.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     602.593 B/op
[info]                  ·gc.churn.PS_Old_Gen:             2.434 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:        1.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 3724037.588 ops/s
[info]                  ·gc.alloc.rate:               1022.605 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 299.267 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3737463.492 ops/s
[info]                  ·gc.alloc.rate:                   1026.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     554.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3742190.467 ops/s
[info]                  ·gc.alloc.rate:                   1027.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     503.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3722099.247 ops/s
[info]                  ·gc.alloc.rate:                   1022.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1089.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3706704.872 ±(99.9%) 215584.910 ops/s [Average]
[info]   (min, avg, max) = (3607733.565, 3706704.872, 3742190.467), stdev = 55986.716
[info]   CI (99.9%): [3491119.962, 3922289.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1017.848 ±(99.9%) 59.107 MB/sec [Average]
[info]   (min, avg, max) = (990.715, 1017.848, 1027.577), stdev = 15.350
[info]   CI (99.9%): [958.741, 1076.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1139.386 ±(99.9%) 1023.425 MB/sec [Average]
[info]   (min, avg, max) = (708.406, 1139.386, 1381.940), stdev = 265.780
[info]   CI (99.9%): [115.961, 2162.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   484.252 ±(99.9%) 448.077 B/op [Average]
[info]   (min, avg, max) = (299.267, 484.252, 602.593), stdev = 116.364
[info]   CI (99.9%): [36.175, 932.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Old_Gen":
[info]   0.487 ±(99.9%) 4.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.487, 2.434), stdev = 1.088
[info]   CI (99.9%): [≈ 0, 4.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Old_Gen.norm":
[info]   0.212 ±(99.9%) 1.828 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.212, 1.061), stdev = 0.475
[info]   CI (99.9%): [≈ 0, 2.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.044), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.600, 19.000), stdev = 7.232
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 50.00% complete, ETA 00:05:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10674145.261 ops/s
[info] # Warmup Iteration   2: 12515773.593 ops/s
[info] # Warmup Iteration   3: 12665708.054 ops/s
[info] # Warmup Iteration   4: 12896821.410 ops/s
[info] # Warmup Iteration   5: 12918002.181 ops/s
[info] Iteration   1: 12855637.389 ops/s
[info]                  ·gc.alloc.rate:                   392.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          601.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 12867447.602 ops/s
[info]                  ·gc.alloc.rate:               392.595 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      281.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34.384 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 12780674.581 ops/s
[info]                  ·gc.alloc.rate:                   389.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          527.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 12974069.545 ops/s
[info]                  ·gc.alloc.rate:               395.842 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      246.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29.941 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 12830159.353 ops/s
[info]                  ·gc.alloc.rate:                   391.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          463.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   12861597.694 ±(99.9%) 274022.651 ops/s [Average]
[info]   (min, avg, max) = (12780674.581, 12861597.694, 12974069.545), stdev = 71162.812
[info]   CI (99.9%): [12587575.043, 13135620.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   392.411 ±(99.9%) 8.353 MB/sec [Average]
[info]   (min, avg, max) = (389.951, 392.411, 395.842), stdev = 2.169
[info]   CI (99.9%): [384.058, 400.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   423.911 ±(99.9%) 594.308 MB/sec [Average]
[info]   (min, avg, max) = (246.911, 423.911, 601.103), stdev = 154.340
[info]   CI (99.9%): [≈ 0, 1018.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   51.914 ±(99.9%) 73.339 B/op [Average]
[info]   (min, avg, max) = (29.941, 51.914, 73.564), stdev = 19.046
[info]   CI (99.9%): [≈ 0, 125.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.010), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 7.000), stdev = 2.510
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 52.63% complete, ETA 00:04:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 610898.312 ops/s
[info] # Warmup Iteration   2: 1002878.565 ops/s
[info] # Warmup Iteration   3: 1017430.062 ops/s
[info] # Warmup Iteration   4: 1058171.340 ops/s
[info] # Warmup Iteration   5: 1040195.541 ops/s
[info] Iteration   1: 1043303.721 ops/s
[info]                  ·gc.alloc.rate:                   1549.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3056.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1037748.266 ops/s
[info]                  ·gc.alloc.rate:                   1540.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1816.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1036555.698 ops/s
[info]                  ·gc.alloc.rate:                   1539.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1597.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2424.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1047778.414 ops/s
[info]                  ·gc.alloc.rate:                   1555.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1808.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2715.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1059203.749 ops/s
[info]                  ·gc.alloc.rate:                   1572.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1504.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2234.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   1044917.970 ±(99.9%) 35302.428 ops/s [Average]
[info]   (min, avg, max) = (1036555.698, 1044917.970, 1059203.749), stdev = 9167.928
[info]   CI (99.9%): [1009615.542, 1080220.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1551.523 ±(99.9%) 52.400 MB/sec [Average]
[info]   (min, avg, max) = (1539.130, 1551.523, 1572.720), stdev = 13.608
[info]   CI (99.9%): [1499.123, 1603.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2336.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2336.000, 2336.000, 2336.000), stdev = 0.001
[info]   CI (99.9%): [2336.000, 2336.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1627.106 ±(99.9%) 1206.427 MB/sec [Average]
[info]   (min, avg, max) = (1198.211, 1627.106, 2026.876), stdev = 313.305
[info]   CI (99.9%): [420.679, 2833.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2449.518 ±(99.9%) 1812.910 B/op [Average]
[info]   (min, avg, max) = (1816.540, 2449.518, 3056.433), stdev = 470.807
[info]   CI (99.9%): [636.608, 4262.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.082 ±(99.9%) 0.110 B/op [Average]
[info]   (min, avg, max) = (0.062, 0.082, 0.126), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 9.000), stdev = 2.881
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 55.26% complete, ETA 00:04:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 629541.883 ops/s
[info] # Warmup Iteration   2: 1026115.727 ops/s
[info] # Warmup Iteration   3: 1038221.007 ops/s
[info] # Warmup Iteration   4: 1046538.474 ops/s
[info] # Warmup Iteration   5: 1027304.469 ops/s
[info] Iteration   1: 1050468.845 ops/s
[info]                  ·gc.alloc.rate:      416.666 MB/sec
[info]                  ·gc.alloc.rate.norm: 624.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1037650.307 ops/s
[info]                  ·gc.alloc.rate:               411.578 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      512.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 777.519 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 1049215.379 ops/s
[info]                  ·gc.alloc.rate:                   416.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          389.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     584.558 B/op
[info]                  ·gc.churn.PS_Old_Gen:             1.847 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:        2.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   4: 1038820.260 ops/s
[info]                  ·gc.alloc.rate:               412.030 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      466.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 706.971 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1043709.921 ops/s
[info]                  ·gc.alloc.rate:               413.963 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 671.521 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   1043972.942 ±(99.9%) 22475.601 ops/s [Average]
[info]   (min, avg, max) = (1037650.307, 1043972.942, 1050468.845), stdev = 5836.842
[info]   CI (99.9%): [1021497.341, 1066448.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   414.075 ±(99.9%) 8.908 MB/sec [Average]
[info]   (min, avg, max) = (411.578, 414.075, 416.666), stdev = 2.313
[info]   CI (99.9%): [405.167, 422.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   624.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (624.000, 624.000, 624.000), stdev = 0.001
[info]   CI (99.9%): [624.000, 624.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   362.995 ±(99.9%) 799.697 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 362.995, 512.835), stdev = 207.679
[info]   CI (99.9%): [≈ 0, 1162.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   548.114 ±(99.9%) 1209.814 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 548.114, 777.519), stdev = 314.185
[info]   CI (99.9%): [≈ 0, 1757.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Old_Gen":
[info]   0.369 ±(99.9%) 3.181 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.369, 1.847), stdev = 0.826
[info]   CI (99.9%): [≈ 0, 3.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Old_Gen.norm":
[info]   0.554 ±(99.9%) 4.769 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 2.769), stdev = 1.239
[info]   CI (99.9%): [≈ 0, 5.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.323 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.187), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 7.200, 22.000), stdev = 8.983
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 57.89% complete, ETA 00:04:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3390631.941 ops/s
[info] # Warmup Iteration   2: 3826076.284 ops/s
[info] # Warmup Iteration   3: 3886274.078 ops/s
[info] # Warmup Iteration   4: 3967748.544 ops/s
[info] # Warmup Iteration   5: 3839500.103 ops/s
[info] Iteration   1: 3904464.090 ops/s
[info]                  ·gc.alloc.rate:               714.758 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 330.020 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 3962489.680 ops/s
[info]                  ·gc.alloc.rate:               725.588 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      779.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 309.557 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 3960421.914 ops/s
[info]                  ·gc.alloc.rate:                   725.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          743.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     295.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3969849.104 ops/s
[info]                  ·gc.alloc.rate:               726.749 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 280.741 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3931117.681 ops/s
[info]                  ·gc.alloc.rate:                   719.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     270.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   3945668.494 ±(99.9%) 105363.614 ops/s [Average]
[info]   (min, avg, max) = (3904464.090, 3945668.494, 3969849.104), stdev = 27362.596
[info]   CI (99.9%): [3840304.879, 4051032.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   722.346 ±(99.9%) 19.437 MB/sec [Average]
[info]   (min, avg, max) = (714.758, 722.346, 726.749), stdev = 5.048
[info]   CI (99.9%): [702.909, 741.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   745.172 ±(99.9%) 218.911 MB/sec [Average]
[info]   (min, avg, max) = (675.085, 745.172, 819.042), stdev = 56.850
[info]   CI (99.9%): [526.261, 964.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   297.160 ±(99.9%) 91.016 B/op [Average]
[info]   (min, avg, max) = (270.173, 297.160, 330.020), stdev = 23.636
[info]   CI (99.9%): [206.144, 388.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.017), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 8.000), stdev = 3.362
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 60.53% complete, ETA 00:04:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101664.733 ops/s
[info] # Warmup Iteration   2: 926167.210 ops/s
[info] # Warmup Iteration   3: 926861.377 ops/s
[info] # Warmup Iteration   4: 956020.686 ops/s
[info] # Warmup Iteration   5: 950843.598 ops/s
[info] Iteration   1: 951346.649 ops/s
[info]                  ·gc.alloc.rate:                   1194.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2140.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 965114.779 ops/s
[info]                  ·gc.alloc.rate:               1212.176 MB/sec
[info]                  ·gc.alloc.rate.norm:          1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      676.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1102.613 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 953095.804 ops/s
[info]                  ·gc.alloc.rate:                   1197.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1460.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2410.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 959963.671 ops/s
[info]                  ·gc.alloc.rate:               1205.715 MB/sec
[info]                  ·gc.alloc.rate.norm:          1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1550.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2541.408 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 962979.252 ops/s
[info]                  ·gc.alloc.rate:               1209.492 MB/sec
[info]                  ·gc.alloc.rate.norm:          1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      804.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1314.098 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   958500.031 ±(99.9%) 23290.594 ops/s [Average]
[info]   (min, avg, max) = (951346.649, 958500.031, 965114.779), stdev = 6048.493
[info]   CI (99.9%): [935209.437, 981790.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1203.869 ±(99.9%) 29.254 MB/sec [Average]
[info]   (min, avg, max) = (1194.881, 1203.869, 1212.176), stdev = 7.597
[info]   CI (99.9%): [1174.615, 1233.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1976.000, 1976.000, 1976.000), stdev = 0.001
[info]   CI (99.9%): [1976.000, 1976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1157.280 ±(99.9%) 1517.644 MB/sec [Average]
[info]   (min, avg, max) = (676.397, 1157.280, 1550.715), stdev = 394.127
[info]   CI (99.9%): [≈ 0, 2674.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1901.916 ±(99.9%) 2517.176 B/op [Average]
[info]   (min, avg, max) = (1102.613, 1901.916, 2541.408), stdev = 653.703
[info]   CI (99.9%): [≈ 0, 4419.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.145 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.069), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 7.000), stdev = 1.949
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 63.16% complete, ETA 00:03:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2575468.240 ops/s
[info] # Warmup Iteration   2: 3055554.975 ops/s
[info] # Warmup Iteration   3: 3040061.319 ops/s
[info] # Warmup Iteration   4: 3101625.467 ops/s
[info] # Warmup Iteration   5: 3086497.643 ops/s
[info] Iteration   1: 3102466.349 ops/s
[info]                  ·gc.alloc.rate:                   362.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          307.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3101912.365 ops/s
[info]                  ·gc.alloc.rate:               362.795 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      293.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 149.059 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 3089204.153 ops/s
[info]                  ·gc.alloc.rate:                   361.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          550.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3105348.804 ops/s
[info]                  ·gc.alloc.rate:                   363.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          257.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3087840.600 ops/s
[info]                  ·gc.alloc.rate:                   361.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          483.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     246.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   3097354.454 ±(99.9%) 31504.556 ops/s [Average]
[info]   (min, avg, max) = (3087840.600, 3097354.454, 3105348.804), stdev = 8181.633
[info]   CI (99.9%): [3065849.899, 3128859.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   362.251 ±(99.9%) 3.710 MB/sec [Average]
[info]   (min, avg, max) = (361.132, 362.251, 363.186), stdev = 0.963
[info]   CI (99.9%): [358.541, 365.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   378.586 ±(99.9%) 499.720 MB/sec [Average]
[info]   (min, avg, max) = (257.899, 378.586, 550.452), stdev = 129.776
[info]   CI (99.9%): [≈ 0, 878.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   192.435 ±(99.9%) 255.948 B/op [Average]
[info]   (min, avg, max) = (130.659, 192.435, 280.340), stdev = 66.469
[info]   CI (99.9%): [≈ 0, 448.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.064), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 8.000), stdev = 2.828
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 65.79% complete, ETA 00:03:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 115708.171 ops/s
[info] # Warmup Iteration   2: 253812.519 ops/s
[info] # Warmup Iteration   3: 258312.089 ops/s
[info] # Warmup Iteration   4: 257950.614 ops/s
[info] # Warmup Iteration   5: 266586.147 ops/s
[info] Iteration   1: 266103.228 ops/s
[info]                  ·gc.alloc.rate:               1032.442 MB/sec
[info]                  ·gc.alloc.rate.norm:          6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4842.170 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 265474.412 ops/s
[info]                  ·gc.alloc.rate:               1030.002 MB/sec
[info]                  ·gc.alloc.rate.norm:          6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1523.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9029.916 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 263692.260 ops/s
[info]                  ·gc.alloc.rate:                   1023.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          708.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4226.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 261317.937 ops/s
[info]                  ·gc.alloc.rate:                   1013.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7938.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.376 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 266925.679 ops/s
[info]                  ·gc.alloc.rate:                   1035.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          613.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3615.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay":
[info]   264702.703 ±(99.9%) 8605.191 ops/s [Average]
[info]   (min, avg, max) = (261317.937, 264702.703, 266925.679), stdev = 2234.741
[info]   CI (99.9%): [256097.512, 273307.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1027.000 ±(99.9%) 33.410 MB/sec [Average]
[info]   (min, avg, max) = (1013.833, 1027.000, 1035.605), stdev = 8.677
[info]   CI (99.9%): [993.590, 1060.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6104.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6104.002, 6104.002, 6104.002), stdev = 0.001
[info]   CI (99.9%): [6104.001, 6104.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   996.610 ±(99.9%) 1543.690 MB/sec [Average]
[info]   (min, avg, max) = (613.426, 996.610, 1523.727), stdev = 400.891
[info]   CI (99.9%): [≈ 0, 2540.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5930.457 ±(99.9%) 9250.211 B/op [Average]
[info]   (min, avg, max) = (3615.617, 5930.457, 9029.916), stdev = 2402.250
[info]   CI (99.9%): [≈ 0, 15180.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.125 ±(99.9%) 0.591 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.125, 0.376), stdev = 0.154
[info]   CI (99.9%): [≈ 0, 0.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 7.000), stdev = 2.683
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 68.42% complete, ETA 00:03:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 921612.792 ops/s
[info] # Warmup Iteration   2: 1479337.426 ops/s
[info] # Warmup Iteration   3: 1493085.180 ops/s
[info] # Warmup Iteration   4: 1524147.843 ops/s
[info] # Warmup Iteration   5: 1467017.614 ops/s
[info] Iteration   1: 1520776.640 ops/s
[info]                  ·gc.alloc.rate:               819.713 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 847.276 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 1528201.894 ops/s
[info]                  ·gc.alloc.rate:               823.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 803.368 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1534720.556 ops/s
[info]                  ·gc.alloc.rate:                   827.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          743.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     762.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1524767.909 ops/s
[info]                  ·gc.alloc.rate:                   821.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1383.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1427.440 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1527950.588 ops/s
[info]                  ·gc.alloc.rate:               823.581 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 662.503 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1527283.518 ±(99.9%) 19753.624 ops/s [Average]
[info]   (min, avg, max) = (1520776.640, 1527283.518, 1534720.556), stdev = 5129.953
[info]   CI (99.9%): [1507529.894, 1547037.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   823.226 ±(99.9%) 10.638 MB/sec [Average]
[info]   (min, avg, max) = (819.713, 823.226, 827.225), stdev = 2.763
[info]   CI (99.9%): [812.588, 833.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   873.931 ±(99.9%) 1125.253 MB/sec [Average]
[info]   (min, avg, max) = (643.425, 873.931, 1383.473), stdev = 292.225
[info]   CI (99.9%): [≈ 0, 1999.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   900.525 ±(99.9%) 1164.379 B/op [Average]
[info]   (min, avg, max) = (662.503, 900.525, 1427.440), stdev = 302.386
[info]   CI (99.9%): [≈ 0, 2064.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.064), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 6.000), stdev = 2.345
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 71.05% complete, ETA 00:02:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3235340.935 ops/s
[info] # Warmup Iteration   2: 4025470.272 ops/s
[info] # Warmup Iteration   3: 4057439.295 ops/s
[info] # Warmup Iteration   4: 4139056.664 ops/s
[info] # Warmup Iteration   5: 4172667.836 ops/s
[info] Iteration   1: 4152510.090 ops/s
[info]                  ·gc.alloc.rate:                   696.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          956.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     362.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 4190535.936 ops/s
[info]                  ·gc.alloc.rate:               703.215 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 167.256 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 4155273.864 ops/s
[info]                  ·gc.alloc.rate:                   697.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          831.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     314.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4061844.697 ops/s
[info]                  ·gc.alloc.rate:                   681.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          757.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     293.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4019755.207 ops/s
[info]                  ·gc.alloc.rate:                   674.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          692.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     270.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4115983.959 ±(99.9%) 276515.948 ops/s [Average]
[info]   (min, avg, max) = (4019755.207, 4115983.959, 4190535.936), stdev = 71810.314
[info]   CI (99.9%): [3839468.010, 4392499.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   690.739 ±(99.9%) 46.332 MB/sec [Average]
[info]   (min, avg, max) = (674.606, 690.739, 703.215), stdev = 12.032
[info]   CI (99.9%): [644.407, 737.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   736.529 ±(99.9%) 731.217 MB/sec [Average]
[info]   (min, avg, max) = (445.519, 736.529, 956.036), stdev = 189.895
[info]   CI (99.9%): [5.312, 1467.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   281.689 ±(99.9%) 278.462 B/op [Average]
[info]   (min, avg, max) = (167.256, 281.689, 362.195), stdev = 72.316
[info]   CI (99.9%): [3.228, 560.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.047), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 8.000), stdev = 3.033
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 73.68% complete, ETA 00:02:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 150985.850 ops/s
[info] # Warmup Iteration   2: 330182.923 ops/s
[info] # Warmup Iteration   3: 342688.866 ops/s
[info] # Warmup Iteration   4: 337497.911 ops/s
[info] # Warmup Iteration   5: 349528.084 ops/s
[info] Iteration   1: 349168.452 ops/s
[info]                  ·gc.alloc.rate:               1202.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      875.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3943.945 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 365830.940 ops/s
[info]                  ·gc.alloc.rate:                   1259.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7000.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 356511.207 ops/s
[info]                  ·gc.alloc.rate:               1227.345 MB/sec
[info]                  ·gc.alloc.rate.norm:          5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      756.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3337.878 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 365014.878 ops/s
[info]                  ·gc.alloc.rate:                   1256.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1407.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6066.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 363456.551 ops/s
[info]                  ·gc.alloc.rate:                   1251.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1278.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5532.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   359996.405 ±(99.9%) 27268.341 ops/s [Average]
[info]   (min, avg, max) = (349168.452, 359996.405, 365830.940), stdev = 7081.502
[info]   CI (99.9%): [332728.064, 387264.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1239.319 ±(99.9%) 93.830 MB/sec [Average]
[info]   (min, avg, max) = (1202.056, 1239.319, 1259.439), stdev = 24.367
[info]   CI (99.9%): [1145.489, 1333.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1189.035 ±(99.9%) 1406.580 MB/sec [Average]
[info]   (min, avg, max) = (756.412, 1189.035, 1627.792), stdev = 365.284
[info]   CI (99.9%): [≈ 0, 2595.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5176.210 ±(99.9%) 5821.946 B/op [Average]
[info]   (min, avg, max) = (3337.878, 5176.210, 7000.041), stdev = 1511.941
[info]   CI (99.9%): [≈ 0, 10998.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.108 ±(99.9%) 0.450 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.108, 0.269), stdev = 0.117
[info]   CI (99.9%): [≈ 0, 0.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.200, 9.000), stdev = 3.347
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 76.32% complete, ETA 00:02:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 122970.893 ops/s
[info] # Warmup Iteration   2: 981262.278 ops/s
[info] # Warmup Iteration   3: 1010184.532 ops/s
[info] # Warmup Iteration   4: 1002494.986 ops/s
[info] # Warmup Iteration   5: 1008432.875 ops/s
[info] Iteration   1: 1022706.182 ops/s
[info]                  ·gc.alloc.rate:               1060.985 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      747.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1150.560 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 758409.866 ops/s
[info]                  ·gc.alloc.rate:               786.760 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      874.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1814.423 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 723097.239 ops/s
[info]                  ·gc.alloc.rate:                   750.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          874.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1903.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 720493.889 ops/s
[info]                  ·gc.alloc.rate:               747.411 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      876.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1914.251 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1018283.939 ops/s
[info]                  ·gc.alloc.rate:               1056.320 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      876.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1354.473 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   848598.223 ±(99.9%) 607017.043 ops/s [Average]
[info]   (min, avg, max) = (720493.889, 848598.223, 1022706.182), stdev = 157640.398
[info]   CI (99.9%): [241581.180, 1455615.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   880.319 ±(99.9%) 629.750 MB/sec [Average]
[info]   (min, avg, max) = (747.411, 880.319, 1060.985), stdev = 163.544
[info]   CI (99.9%): [250.569, 1510.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.001, 1632.001), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   850.151 ±(99.9%) 219.932 MB/sec [Average]
[info]   (min, avg, max) = (747.994, 850.151, 876.689), stdev = 57.116
[info]   CI (99.9%): [630.219, 1070.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1627.348 ±(99.9%) 1354.721 B/op [Average]
[info]   (min, avg, max) = (1150.560, 1627.348, 1914.251), stdev = 351.817
[info]   CI (99.9%): [272.627, 2982.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.156 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.091), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 5.000), stdev = 1.732
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 78.95% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2972785.414 ops/s
[info] # Warmup Iteration   2: 3509871.677 ops/s
[info] # Warmup Iteration   3: 3629337.682 ops/s
[info] # Warmup Iteration   4: 3535336.001 ops/s
[info] # Warmup Iteration   5: 3613316.407 ops/s
[info] Iteration   1: 3608120.747 ops/s
[info]                  ·gc.alloc.rate:               532.066 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      512.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 223.597 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 3602667.129 ops/s
[info]                  ·gc.alloc.rate:               531.265 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 213.604 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3592684.279 ops/s
[info]                  ·gc.alloc.rate:               529.777 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      466.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 204.427 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 3572158.187 ops/s
[info]                  ·gc.alloc.rate:                   526.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          870.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     383.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3601045.352 ops/s
[info]                  ·gc.alloc.rate:                   531.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          405.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   3595335.139 ±(99.9%) 54252.913 ops/s [Average]
[info]   (min, avg, max) = (3572158.187, 3595335.139, 3608120.747), stdev = 14089.309
[info]   CI (99.9%): [3541082.225, 3649588.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   530.176 ±(99.9%) 8.008 MB/sec [Average]
[info]   (min, avg, max) = (526.758, 530.176, 532.066), stdev = 2.080
[info]   CI (99.9%): [522.168, 538.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   549.045 ±(99.9%) 708.960 MB/sec [Average]
[info]   (min, avg, max) = (405.841, 549.045, 870.636), stdev = 184.115
[info]   CI (99.9%): [≈ 0, 1258.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   240.479 ±(99.9%) 314.829 B/op [Average]
[info]   (min, avg, max) = (177.312, 240.479, 383.454), stdev = 81.760
[info]   CI (99.9%): [≈ 0, 555.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.077 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.037), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 5.000), stdev = 1.517
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay
[info] # Run progress: 81.58% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125638.250 ops/s
[info] # Warmup Iteration   2: 272884.539 ops/s
[info] # Warmup Iteration   3: 274748.775 ops/s
[info] # Warmup Iteration   4: 271383.962 ops/s
[info] # Warmup Iteration   5: 281663.170 ops/s
[info] Iteration   1: 280879.562 ops/s
[info]                  ·gc.alloc.rate:               1025.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4370.933 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 279686.943 ops/s
[info]                  ·gc.alloc.rate:                   1021.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1451.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8166.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.234 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 276778.736 ops/s
[info]                  ·gc.alloc.rate:               1010.515 MB/sec
[info]                  ·gc.alloc.rate.norm:          5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3837.191 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 278774.036 ops/s
[info]                  ·gc.alloc.rate:                   1017.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7093.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.470 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 277794.214 ops/s
[info]                  ·gc.alloc.rate:                   1014.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1142.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6470.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay":
[info]   278782.698 ±(99.9%) 6151.257 ops/s [Average]
[info]   (min, avg, max) = (276778.736, 278782.698, 280879.562), stdev = 1597.462
[info]   CI (99.9%): [272631.442, 284933.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   1017.835 ±(99.9%) 22.438 MB/sec [Average]
[info]   (min, avg, max) = (1010.515, 1017.835, 1025.488), stdev = 5.827
[info]   CI (99.9%): [995.397, 1040.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5744.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5744.002, 5744.002, 5744.002), stdev = 0.001
[info]   CI (99.9%): [5744.001, 5744.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1061.317 ±(99.9%) 1255.750 MB/sec [Average]
[info]   (min, avg, max) = (675.059, 1061.317, 1451.743), stdev = 326.114
[info]   CI (99.9%): [≈ 0, 2317.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5987.662 ±(99.9%) 7058.356 B/op [Average]
[info]   (min, avg, max) = (3837.191, 5987.662, 8166.258), stdev = 1833.033
[info]   CI (99.9%): [≈ 0, 13046.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.164 ±(99.9%) 0.757 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.164, 0.470), stdev = 0.197
[info]   CI (99.9%): [≈ 0, 0.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 6.000), stdev = 2.074
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 84.21% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67831.262 ops/s
[info] # Warmup Iteration   2: 764414.522 ops/s
[info] # Warmup Iteration   3: 876054.750 ops/s
[info] # Warmup Iteration   4: 780642.392 ops/s
[info] # Warmup Iteration   5: 622976.514 ops/s
[info] Iteration   1: 611719.732 ops/s
[info]                  ·gc.alloc.rate:               597.253 MB/sec
[info]                  ·gc.alloc.rate.norm:          1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      626.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1611.095 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 826430.295 ops/s
[info]                  ·gc.alloc.rate:               806.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      632.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1204.589 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 883503.781 ops/s
[info]                  ·gc.alloc.rate:                   862.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              1536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          750.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1336.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 889122.648 ops/s
[info]                  ·gc.alloc.rate:               868.069 MB/sec
[info]                  ·gc.alloc.rate.norm:          1536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      758.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1342.476 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 879900.650 ops/s
[info]                  ·gc.alloc.rate:               859.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      825.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1475.758 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   818135.421 ±(99.9%) 454813.840 ops/s [Average]
[info]   (min, avg, max) = (611719.732, 818135.421, 889122.648), stdev = 118113.710
[info]   CI (99.9%): [363321.581, 1272949.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   798.770 ±(99.9%) 444.016 MB/sec [Average]
[info]   (min, avg, max) = (597.253, 798.770, 868.069), stdev = 115.310
[info]   CI (99.9%): [354.754, 1242.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1536.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1536.000, 1536.001, 1536.001), stdev = 0.001
[info]   CI (99.9%): [1536.000, 1536.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   718.741 ±(99.9%) 332.792 MB/sec [Average]
[info]   (min, avg, max) = (626.453, 718.741, 825.382), stdev = 86.425
[info]   CI (99.9%): [385.949, 1051.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1394.029 ±(99.9%) 595.555 B/op [Average]
[info]   (min, avg, max) = (1204.589, 1394.029, 1611.095), stdev = 154.664
[info]   CI (99.9%): [798.474, 1989.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.074), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 86.84% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2339287.421 ops/s
[info] # Warmup Iteration   2: 2710252.261 ops/s
[info] # Warmup Iteration   3: 2736591.749 ops/s
[info] # Warmup Iteration   4: 2780886.135 ops/s
[info] # Warmup Iteration   5: 2800109.353 ops/s
[info] Iteration   1: 2815635.860 ops/s
[info]                  ·gc.alloc.rate:               472.480 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      512.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 286.530 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 2090720.693 ops/s
[info]                  ·gc.alloc.rate:               350.840 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 368.074 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1939771.833 ops/s
[info]                  ·gc.alloc.rate:                   325.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          466.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     378.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1950943.623 ops/s
[info]                  ·gc.alloc.rate:      327.368 MB/sec
[info]                  ·gc.alloc.rate.norm: 264.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2785149.271 ops/s
[info]                  ·gc.alloc.rate:                   467.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          870.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     491.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   2316444.256 ±(99.9%) 1716994.963 ops/s [Average]
[info]   (min, avg, max) = (1939771.833, 2316444.256, 2815635.860), stdev = 445898.139
[info]   CI (99.9%): [599449.293, 4033439.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   388.711 ±(99.9%) 288.116 MB/sec [Average]
[info]   (min, avg, max) = (325.510, 388.711, 472.480), stdev = 74.823
[info]   CI (99.9%): [100.595, 676.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   467.888 ±(99.9%) 1192.479 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 467.888, 870.659), stdev = 309.683
[info]   CI (99.9%): [≈ 0, 1660.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   305.008 ±(99.9%) 714.357 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 305.008, 491.818), stdev = 185.516
[info]   CI (99.9%): [≈ 0, 1019.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.062 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.034), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.600, 9.000), stdev = 3.782
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 89.47% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112403.866 ops/s
[info] # Warmup Iteration   2: 259049.273 ops/s
[info] # Warmup Iteration   3: 259160.430 ops/s
[info] # Warmup Iteration   4: 258118.361 ops/s
[info] # Warmup Iteration   5: 269824.015 ops/s
[info] Iteration   1: 269180.221 ops/s
[info]                  ·gc.alloc.rate:                   1044.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          818.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4786.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 269066.058 ops/s
[info]                  ·gc.alloc.rate:               1043.937 MB/sec
[info]                  ·gc.alloc.rate.norm:          6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1523.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8909.716 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 269411.709 ops/s
[info]                  ·gc.alloc.rate:                   1045.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          708.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4136.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 266614.172 ops/s
[info]                  ·gc.alloc.rate:                   1034.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7780.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.369 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 269639.895 ops/s
[info]                  ·gc.alloc.rate:               1046.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1198.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6991.232 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay":
[info]   268782.411 ±(99.9%) 4743.980 ops/s [Average]
[info]   (min, avg, max) = (266614.172, 268782.411, 269639.895), stdev = 1231.996
[info]   CI (99.9%): [264038.431, 273526.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   1042.818 ±(99.9%) 18.405 MB/sec [Average]
[info]   (min, avg, max) = (1034.400, 1042.818, 1046.109), stdev = 4.780
[info]   CI (99.9%): [1024.413, 1061.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6104.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6104.002, 6104.002, 6104.002), stdev = 0.001
[info]   CI (99.9%): [6104.001, 6104.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1113.562 ±(99.9%) 1317.614 MB/sec [Average]
[info]   (min, avg, max) = (708.398, 1113.562, 1523.784), stdev = 342.180
[info]   CI (99.9%): [≈ 0, 2431.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6520.955 ±(99.9%) 7750.434 B/op [Average]
[info]   (min, avg, max) = (4136.771, 6520.955, 8909.716), stdev = 2012.763
[info]   CI (99.9%): [≈ 0, 14271.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.147 ±(99.9%) 0.616 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.147, 0.369), stdev = 0.160
[info]   CI (99.9%): [≈ 0, 0.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 10.000), stdev = 3.271
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 92.11% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1123604.000 ops/s
[info] # Warmup Iteration   2: 1595303.851 ops/s
[info] # Warmup Iteration   3: 1632734.320 ops/s
[info] # Warmup Iteration   4: 1651389.357 ops/s
[info] # Warmup Iteration   5: 1669843.789 ops/s
[info] Iteration   1: 1643956.548 ops/s
[info]                  ·gc.alloc.rate:                   660.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          489.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 1666066.182 ops/s
[info]                  ·gc.alloc.rate:                   669.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          912.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     861.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1663051.544 ops/s
[info]                  ·gc.alloc.rate:               668.068 MB/sec
[info]                  ·gc.alloc.rate.norm:          632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      425.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 402.221 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1656861.756 ops/s
[info]                  ·gc.alloc.rate:                   665.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     753.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1660476.704 ops/s
[info]                  ·gc.alloc.rate:                   667.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          724.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     686.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1658082.547 ±(99.9%) 33079.447 ops/s [Average]
[info]   (min, avg, max) = (1643956.548, 1658082.547, 1666066.182), stdev = 8590.627
[info]   CI (99.9%): [1625003.100, 1691161.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   666.066 ±(99.9%) 13.269 MB/sec [Average]
[info]   (min, avg, max) = (660.393, 666.066, 669.255), stdev = 3.446
[info]   CI (99.9%): [652.797, 679.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (632.000, 632.000, 632.000), stdev = 0.001
[info]   CI (99.9%): [632.000, 632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   668.803 ±(99.9%) 792.632 MB/sec [Average]
[info]   (min, avg, max) = (425.176, 668.803, 912.301), stdev = 205.844
[info]   CI (99.9%): [≈ 0, 1461.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   634.238 ±(99.9%) 745.540 B/op [Average]
[info]   (min, avg, max) = (402.221, 634.238, 861.517), stdev = 193.614
[info]   CI (99.9%): [≈ 0, 1379.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.059), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 17.000), stdev = 6.164
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 94.74% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5260071.525 ops/s
[info] # Warmup Iteration   2: 6135388.586 ops/s
[info] # Warmup Iteration   3: 6283787.248 ops/s
[info] # Warmup Iteration   4: 6287616.073 ops/s
[info] # Warmup Iteration   5: 6319358.065 ops/s
[info] Iteration   1: 6237888.519 ops/s
[info]                  ·gc.alloc.rate:                   285.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          260.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6298759.573 ops/s
[info]                  ·gc.alloc.rate:               288.263 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      242.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60.505 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 6198990.477 ops/s
[info]                  ·gc.alloc.rate:                   283.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 6237936.165 ops/s
[info]                  ·gc.alloc.rate:                   285.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          298.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6268666.711 ops/s
[info]                  ·gc.alloc.rate:                   286.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          269.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   6248448.289 ±(99.9%) 144182.046 ops/s [Average]
[info]   (min, avg, max) = (6198990.477, 6248448.289, 6298759.573), stdev = 37443.619
[info]   CI (99.9%): [6104266.244, 6392630.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   285.958 ±(99.9%) 6.595 MB/sec [Average]
[info]   (min, avg, max) = (283.698, 285.958, 288.263), stdev = 1.713
[info]   CI (99.9%): [279.363, 292.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   280.757 ±(99.9%) 135.287 MB/sec [Average]
[info]   (min, avg, max) = (242.242, 280.757, 331.875), stdev = 35.134
[info]   CI (99.9%): [145.470, 416.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   70.730 ±(99.9%) 35.584 B/op [Average]
[info]   (min, avg, max) = (60.505, 70.730, 84.227), stdev = 9.241
[info]   CI (99.9%): [35.146, 106.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.125), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.048 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.032), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 10.000), stdev = 2.915
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 97.37% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110863.867 ops/s
[info] # Warmup Iteration   2: 223919.898 ops/s
[info] # Warmup Iteration   3: 226462.834 ops/s
[info] # Warmup Iteration   4: 222999.799 ops/s
[info] # Warmup Iteration   5: 231724.017 ops/s
[info] Iteration   1: 230443.934 ops/s
[info]                  ·gc.alloc.rate:                   1062.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1599.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10919.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.427 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 231568.688 ops/s
[info]                  ·gc.alloc.rate:               1068.039 MB/sec
[info]                  ·gc.alloc.rate.norm:          7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5050.416 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 230552.237 ops/s
[info]                  ·gc.alloc.rate:                   1063.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1383.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9440.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.853 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 229576.830 ops/s
[info]                  ·gc.alloc.rate:               1058.856 MB/sec
[info]                  ·gc.alloc.rate.norm:          7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4409.082 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 230323.313 ops/s
[info]                  ·gc.alloc.rate:                   1062.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8184.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   230493.000 ±(99.9%) 2743.960 ops/s [Average]
[info]   (min, avg, max) = (229576.830, 230493.000, 231568.688), stdev = 712.598
[info]   CI (99.9%): [227749.040, 233236.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1063.061 ±(99.9%) 12.657 MB/sec [Average]
[info]   (min, avg, max) = (1058.856, 1063.061, 1068.039), stdev = 3.287
[info]   CI (99.9%): [1050.404, 1075.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   7256.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7256.002, 7256.002, 7256.002), stdev = 0.001
[info]   CI (99.9%): [7256.002, 7256.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1113.577 ±(99.9%) 1580.816 MB/sec [Average]
[info]   (min, avg, max) = (643.410, 1113.577, 1599.428), stdev = 410.533
[info]   CI (99.9%): [≈ 0, 2694.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7600.807 ±(99.9%) 10793.852 B/op [Average]
[info]   (min, avg, max) = (4409.082, 7600.807, 10919.302), stdev = 2803.129
[info]   CI (99.9%): [≈ 0, 18394.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.284 ±(99.9%) 1.395 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.284, 0.853), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 6.000), stdev = 2.074
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:10:08
[info] Benchmark                                                                     Mode  Cnt         Score         Error   Units
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5   1765899.861 ±   49995.462   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1257.117 ±      35.489  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1120.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1226.778 ±    1848.416  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1093.098 ±    1648.130    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.017 ±       0.143  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.015 ±       0.128    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5         7.000                counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        26.000                    ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6325886.401 ±  291908.816   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5      1093.697 ±      50.531  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       272.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1113.574 ±    1317.536  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       277.430 ±     333.065    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.037 ±       0.243  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.009 ±       0.061    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5         8.000                counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        19.000                    ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5    358543.135 ±    7309.680   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5       948.055 ±      19.363  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.001 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5       873.923 ±    1125.254  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3836.630 ±    4980.673    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.033 ±       0.185  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.146 ±       0.811    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5         6.000                counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        19.000                    ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5   5317830.149 ±  194499.055   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       567.852 ±      20.794  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±       0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       663.871 ±    1434.709  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       196.783 ±     425.640    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.012 ±       0.072  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.004 ±       0.021    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5         4.000                counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        21.000                    ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3387736.993 ±   79425.447   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1602.115 ±      37.498  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±       0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1650.024 ±    1270.407  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       766.219 ±     590.702    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.050 ±       0.091  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.023 ±       0.042    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        13.000                counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        33.000                    ms
[info] CodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    223246.663 ±    2350.506   ops/s
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1235.451 ±      12.272  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8704.002 ±       0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1268.482 ±     735.394  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8939.161 ±    5255.948    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.046 ±       0.067  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.323 ±       0.472    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        10.000                counts
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        24.000                    ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5    511152.650 ±   19320.511   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       519.847 ±      19.651  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       492.677 ±     507.940  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1517.326 ±    1582.490    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.017 ±       0.088  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.051 ±       0.270    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         6.000                counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        19.000                    ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5   3089637.881 ±  129358.203   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       769.821 ±      32.247  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       392.000 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       782.222 ±     230.746  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       398.536 ±     130.384    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.012 ±       0.108  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.006 ±       0.054    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5         5.000                counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        10.000                    ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5    147587.965 ±    3155.498   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1014.659 ±      21.625  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10816.003 ±       0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5       996.606 ±    1300.984  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     10620.258 ±   13792.223    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.025 ±       0.143  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.266 ±       1.521    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5         7.000                counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        25.000                    ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5    875761.194 ±   24528.916   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1033.142 ±      28.932  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.001 ±       0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5       994.798 ±     378.061  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1788.018 ±     717.505    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.025 ±       0.067  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.045 ±       0.119    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        10.000                counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        24.000                    ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5   3281196.567 ±  143806.885   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       817.551 ±      35.751  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±       0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       917.257 ±    1338.230  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       441.189 ±     667.860    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.021 ±       0.113  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.010 ±       0.054    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5         6.000                counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        22.000                    ms
[info] CodecBenchmark.readMapsPlay                                                  thrpt    5    239551.270 ±    3411.023   ops/s
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1283.894 ±      18.260  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8432.002 ±       0.001    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1353.808 ±     791.851  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      8891.384 ±    5203.228    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.012 ±       0.044  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.082 ±       0.288    B/op
[info] CodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        10.000                counts
[info] CodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        20.000                    ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5    812792.496 ±   66106.702   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5      1053.927 ±      85.694  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5      1139.688 ±    1393.676  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2212.039 ±    2787.506    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.017 ±       0.067  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.032 ±       0.129    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        10.000                counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        31.000                    ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2153608.505 ± 1533766.998   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1346.988 ±     959.246  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5       984.000 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1389.303 ±    1561.403  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1017.560 ±    1052.583    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.054 ±       0.156  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.042 ±       0.139    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        11.000                counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        22.000                    ms
[info] CodecBenchmark.readMutableMapsPlay                                           thrpt    5    225864.855 ±    5217.621   ops/s
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1251.870 ±      28.899  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8720.002 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1353.786 ±    1566.432  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      9438.857 ±   10997.127    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±       0.088  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.174 ±       0.612    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        10.000                counts
[info] CodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        21.000                    ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5   1076809.390 ±   53556.316   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       788.467 ±      39.221  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1152.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       845.595 ±     159.941  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1235.261 ±     204.161    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.017 ±       0.088  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.024 ±       0.128    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5         5.000                counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        22.000                    ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   5772258.120 ±  200342.186   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5       146.763 ±       5.100  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        40.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       147.484 ±      77.221  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        40.167 ±      20.065    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.075 ±       0.091  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.020 ±       0.025    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5        16.000                counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5        27.000                    ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5    158513.368 ±    2901.345   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5       980.983 ±      17.816  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5      9736.003 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5       949.805 ±    1240.443  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      9429.642 ±   12357.810    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.017 ±       0.105  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.165 ±       1.037    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5         7.000                counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        20.000                    ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3706704.872 ±  215584.910   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1017.848 ±      59.107  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1139.386 ±    1023.425  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       484.252 ±     448.077    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Old_Gen                      thrpt    5         0.487 ±       4.191  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Old_Gen.norm                 thrpt    5         0.212 ±       1.828    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.050 ±       0.166  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.021 ±       0.071    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        10.000                counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        33.000                    ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  12861597.694 ±  274022.651   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       392.411 ±       8.353  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       423.911 ±     594.308  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        51.914 ±      73.339    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.050 ±       0.176  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.006 ±       0.022    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         8.000                counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        22.000                    ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5   1044917.970 ±   35302.428   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1551.523 ±      52.400  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2336.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1627.106 ±    1206.427  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2449.518 ±    1812.910    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±       0.072  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.082 ±       0.110    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        16.000                counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        28.000                    ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   1043972.942 ±   22475.601   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5       414.075 ±       8.908  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       624.000 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5       362.995 ±     799.697  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       548.114 ±    1209.814    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Old_Gen                      thrpt    5         0.369 ±       3.181  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Old_Gen.norm                 thrpt    5         0.554 ±       4.769    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±       0.215  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.037 ±       0.323    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5         5.000                counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        36.000                    ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   3945668.494 ±  105363.614   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       722.346 ±      19.437  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       745.172 ±     218.911  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       297.160 ±      91.016    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.017 ±       0.088  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.007 ±       0.035    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5         5.000                counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        22.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5    958500.031 ±   23290.594   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1203.869 ±      29.254  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1976.000 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1157.280 ±    1517.644  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1901.916 ±    2517.176    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.017 ±       0.088  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.028 ±       0.145    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5         8.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        18.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   3097354.454 ±   31504.556   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       362.251 ±       3.710  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       184.000 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       378.586 ±     499.720  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       192.435 ±     255.948    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.046 ±       0.183  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.023 ±       0.093    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         7.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        20.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    264702.703 ±    8605.191   ops/s
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5      1027.000 ±      33.410  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6104.002 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       996.610 ±    1543.690  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      5930.457 ±    9250.211    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.021 ±       0.098  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.125 ±       0.591    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5         7.000                counts
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        16.000                    ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5   1527283.518 ±   19753.624   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       823.226 ±      10.638  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       848.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       873.931 ±    1125.253  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       900.525 ±    1164.379    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.017 ±       0.105  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.017 ±       0.108    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5         6.000                counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        15.000                    ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4115983.959 ±  276515.948   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       690.739 ±      46.332  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       264.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       736.529 ±     731.217  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       281.689 ±     278.462    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.071 ±       0.185  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.027 ±       0.070    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5         9.000                counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        24.000                    ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5    359996.405 ±   27268.341   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1239.319 ±      93.830  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5416.001 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1189.035 ±    1406.580  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5176.210 ±    5821.946    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.025 ±       0.105  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.108 ±       0.450    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5         8.000                counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        26.000                    ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5    848598.223 ±  607017.043   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5       880.319 ±     629.750  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.001 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5       850.151 ±     219.932  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1627.348 ±    1354.721    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.008 ±       0.072  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.018 ±       0.156    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5         5.000                counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        10.000                    ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5   3595335.139 ±   54252.913   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       530.176 ±       8.008  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       232.000 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       549.045 ±     708.960  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       240.479 ±     314.829    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.033 ±       0.176  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.015 ±       0.077    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         6.000                counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        12.000                    ms
[info] CodecBenchmark.writeMapsPlay                                                 thrpt    5    278782.698 ±    6151.257   ops/s
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5      1017.835 ±      22.438  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5744.002 ±       0.001    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5      1061.317 ±    1255.750  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5987.662 ±    7058.356    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.029 ±       0.134  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.164 ±       0.757    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5         8.000                counts
[info] CodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        13.000                    ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5    818135.421 ±  454813.840   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5       798.770 ±     444.016  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1536.001 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5       718.741 ±     332.792  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1394.029 ±     595.555    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.008 ±       0.072  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.015 ±       0.128    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5         5.000                counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        11.000                    ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   2316444.256 ± 1716994.963   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       388.711 ±     288.116  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       264.000 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       467.888 ±    1192.479  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       305.008 ±     714.357    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.017 ±       0.088  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.011 ±       0.062    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         5.000                counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        18.000                    ms
[info] CodecBenchmark.writeMutableMapsPlay                                          thrpt    5    268782.411 ±    4743.980   ops/s
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5      1042.818 ±      18.405  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6104.002 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5      1113.562 ±    1317.614  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      6520.955 ±    7750.434    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.025 ±       0.105  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.147 ±       0.616    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5         8.000                counts
[info] CodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        24.000                    ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5   1658082.547 ±   33079.447   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       666.066 ±      13.269  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       632.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       668.803 ±     792.632  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       634.238 ±     745.540    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.029 ±       0.091  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.028 ±       0.087    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5         8.000                counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        30.000                    ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   6248448.289 ±  144182.046   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       285.958 ±       6.595  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5        72.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       280.757 ±     135.287  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5        70.730 ±      35.584    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.083 ±       0.188  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.021 ±       0.048    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5        13.000                counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5        30.000                    ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5    230493.000 ±    2743.960   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1063.061 ±      12.657  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      7256.002 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1113.577 ±    1580.816  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      7600.807 ±   10793.852    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±       0.204  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.284 ±       1.395    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5         8.000                counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        18.000                    ms
[success] Total time: 632 s, completed Oct 12, 2017 8:44:49 AM
